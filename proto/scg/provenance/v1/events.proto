syntax = "proto3";

package proto.scg.notification.provenance.events;

import "proto/scg/shared/v1/events.proto";
import "proto/scg/provenance/v1/enums.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/hbttundar/scg-notification-contracts/gen/go/scg/provenance/v1;provenancev1";

// ProvenanceRecordCreatedNotification is sent when a new provenance record is created
message ProvenanceRecordCreatedNotification {
  proto.scg.notification.shared.events.NotificationEvent base = 1;
  string provenance_record_id = 2;
  string entity_id = 3;
  string entity_type = 4;
  proto.scg.notification.provenance.enums.ProvenanceRecordType record_type = 5;
  string location = 6;
  string actor_id = 7;
  string actor_name = 8;
  string organization_id = 9;
  string organization_name = 10;
  string description = 11;
  google.protobuf.Timestamp occurred_at = 12;
  google.protobuf.Timestamp recorded_at = 13;
}

// ProvenanceRecordVerifiedNotification is sent when a provenance record is verified
message ProvenanceRecordVerifiedNotification {
  proto.scg.notification.shared.events.NotificationEvent base = 1;
  string provenance_record_id = 2;
  string entity_id = 3;
  string entity_type = 4;
  proto.scg.notification.provenance.enums.ProvenanceRecordType record_type = 5;
  proto.scg.notification.provenance.enums.ProvenanceVerificationMethod verification_method = 6;
  string verifier_id = 7;
  string verifier_name = 8;
  string verification_notes = 9;
  google.protobuf.Timestamp verified_at = 10;
}

// ProvenanceRecordDisputedNotification is sent when a provenance record is disputed
message ProvenanceRecordDisputedNotification {
  proto.scg.notification.shared.events.NotificationEvent base = 1;
  string dispute_id = 2;
  string provenance_record_id = 3;
  string entity_id = 4;
  string entity_type = 5;
  string disputant_id = 6;
  string disputant_name = 7;
  string disputant_organization_id = 8;
  string disputant_organization_name = 9;
  proto.scg.notification.provenance.enums.ProvenanceDisputeReason reason = 10;
  string description = 11;
  google.protobuf.Timestamp disputed_at = 12;
}

// ProvenanceDisputeResolvedNotification is sent when a provenance dispute is resolved
message ProvenanceDisputeResolvedNotification {
  proto.scg.notification.shared.events.NotificationEvent base = 1;
  string dispute_id = 2;
  string provenance_record_id = 3;
  string entity_id = 4;
  string entity_type = 5;
  string resolution = 6;
  string resolver_id = 7;
  string resolver_name = 8;
  google.protobuf.Timestamp resolved_at = 9;
}

// ProvenanceChainCompletedNotification is sent when a provenance chain is completed
message ProvenanceChainCompletedNotification {
  proto.scg.notification.shared.events.NotificationEvent base = 1;
  string provenance_chain_id = 2;
  string entity_id = 3;
  string entity_type = 4;
  int32 record_count = 5;
  bool is_verified = 6;
  google.protobuf.Timestamp completed_at = 7;
}

// ProvenanceCertificationIssuedNotification is sent when a provenance certification is issued
message ProvenanceCertificationIssuedNotification {
  proto.scg.notification.shared.events.NotificationEvent base = 1;
  string certification_id = 2;
  string entity_id = 3;
  string entity_type = 4;
  string certification_type = 5;
  string certification_name = 6;
  string issuer_id = 7;
  string issuer_name = 8;
  google.protobuf.Timestamp issued_at = 9;
  google.protobuf.Timestamp valid_until = 10;
}

// ProvenanceCertificationExpiringNotification is sent when a provenance certification is about to expire
message ProvenanceCertificationExpiringNotification {
  proto.scg.notification.shared.events.NotificationEvent base = 1;
  string certification_id = 2;
  string entity_id = 3;
  string entity_type = 4;
  string certification_type = 5;
  string certification_name = 6;
  string issuer_id = 7;
  string issuer_name = 8;
  google.protobuf.Timestamp valid_until = 9;
  int32 days_until_expiration = 10;
}